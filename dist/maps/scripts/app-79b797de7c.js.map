{"version":3,"sources":["/source/firebase.service.js"],"names":["angular","module","call","this","controller","$rootScope","$scope","$timeout","$interval","$filter","$state","$uibModalStack","rep","methods","close","dismissAll","FirebaseService","toastr","reps","save","id","length","createRep","success","filter","competitions","_","each","comp","index","findIndex","c","name","push","allCompetitionsArray","updatedReps","copy","selectedCompetition","selectedReps","leaderboard","genre","currentState","find","menu","item","state","current","init","obj","indexOf","position","map","competition","matches","match","initials","join","validateReps","isRep","validateRepsAdded","validateRepsRemoved","$event","idx","stopPropagation","splice","changeSelectedCompetition","JSON","parse","saveLeaderboad","updateLeaderboard","genreFilter","events","config","calendar","editable","header","left","center","right","addEvent","rules","updateRules","$uibModal","storage","firebase","$parent","repsSearched","joker","ref","user","getDownloadURL","then","url","team","getDetails","modalInstance","open","animation","windowTemplateUrl","templateUrl","backdrop","resolve","saveRep","result","console","log","getAllReps","$watch","newVal","oldval","$stateProvider","$urlRouterProvider","params","controllerAs","StorageService","getCurrentUser","getRepById","getAllCompetitions","prices","getPrices","getRules","getCompetitionsArray","points","updatePoints","$localStorage","allCompetitions","totalCost","selectedPrice","img","selectedCompetitions","participants","parts","currentMenu","icon","value","formInvalid","invalid","errors","participant","teams","partitipants","setCurrentMenu","logout","deleteCurrentUser","go","clearTeam","addParticipant","removeParticipant","clear","validateForm","excludes","repAllowedComps","part","comps","difference","error","extraData","templates","toast","updateRepTotalCost","updateRepParticipants","updateRepCompetitions","addCompsToParticipant","isPartOfTeam","isParticipating","p","getTotalPrice","price","oldVal","service","$http","$q","users","getAllUsers","otherwise","directive","restrict","scope","ngBgSlideshow","interval","link","elem","attr","change","val","images","active_image","$storage","showForm","email","password","changeView","login","currentRep","currentUser","type","setCurrentUser","abstract","$stateParams","getUserById","status","isopen","run","$log","$templateCache","offline","connectionStatus","debug","isOnline","$on","event","toState","toParams","fromState","fromParams","options","preventDefault","put","constant","moment","$logProvider","toastrConfig","debugEnabled","extend","autoDismiss","closeButton","progressBar","preventDuplicates","preventOpenDuplicates","newestOnTop","maxOpened","timeOut","extendedTimeOut","positionClass","target","auth","database","getCurrentAuthuser","once","parseInt","child","getAllRepsOrderedByPoints","orderByKey","getRepCompetitions","set","updateRepPoints","key","compAllIndex","register","compIndex","i","all","$window","navigator","onLine","listener","addEventListener","$apply","provider","$requester","offlineProvider","_debug","$get","$cacheFactory","apply","concat","slice","arguments","cleanIfExpired","cache","defaults","get","info","isExpired","remove","getStackCache","stackCache","defaultStackCache","getStack","saveStack","stack","stackPush","request","stackShift","shift","storeRequest","data","headers","method","timeout","isNumber","undefined","processNextRequest","response","reject","Error","processStack","message","start","requester","interceptors","$provide","$httpProvider","factory"],"mappings":"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","file":"scripts/app-79b797de7c.js","sourcesContent":["(function() {\n  angular.module('interreps', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ui.router', 'toastr', 'ui.bootstrap', 'ngStorage', 'checklist-model', 'ui.select', 'xeditable', 'akoenig.deckgrid', 'ngFileUpload', 'offline']);\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminRepsDetailsController', function($rootScope, $scope, $timeout, $interval, $filter, $state, $uibModalStack, rep) {\n    'ngInject';\n    $scope.rep = rep;\n    $scope.methods = {\n      close: function() {\n        return $uibModalStack.dismissAll();\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminRepsCreateController', function($rootScope, $scope, $timeout, $interval, $filter, $state, $uibModalStack, FirebaseService, toastr, reps) {\n    'ngInject';\n    $scope.rep = {};\n    $scope.reps = reps;\n    $scope.methods = {\n      save: function() {\n        $scope.rep.id = $scope.reps.length + 1;\n        FirebaseService.createRep($scope.rep);\n        toastr.success('República criada com sucesso');\n        return $timeout(function() {\n          return $scope.methods.close();\n        }, 500);\n      },\n      close: function() {\n        return $uibModalStack.dismissAll();\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n\n\n}).call(this);\n\n\n\n(function() {\n  'use strict';\n  angular.module(\"interreps\").filter(\"newArrayFilter\", function() {\n    return function(reps, competitions) {\n      _.each(reps, function(rep) {\n        return _.each(competitions, function(comp) {\n          var index;\n          index = _.findIndex(rep.competitions, function(c) {\n            return c.name === comp.name;\n          });\n          if (index === -1) {\n            return rep.competitions.push({\n              name: comp.name\n            });\n          }\n        });\n      });\n      return reps;\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminScoresController', function($rootScope, $scope, $timeout, $interval, $filter, $state, toastr, FirebaseService, reps, competitions, allCompetitionsArray) {\n    'ngInject';\n    $scope.reps = reps;\n    $scope.competitions = competitions;\n    $scope.allCompetitionsArray = allCompetitionsArray;\n    $scope.updatedReps = angular.copy($scope.reps);\n    $scope.selectedCompetition = {};\n    $scope.selectedReps = [];\n    $scope.leaderboard = [];\n    $scope.filter = {\n      genre: 'G',\n      competitions: 'T'\n    };\n    $rootScope.currentState = _.find($rootScope.menu, function(item) {\n      return item.state === $state.current.name;\n    });\n    $scope.methods = {\n      init: function() {\n        $scope.leaderboard = [];\n        $scope.selectedReps = [];\n        _.each($scope.reps, function(rep) {\n          var index, obj;\n          index = _.indexOf($scope.reps, rep);\n          obj = {\n            position: index + 1,\n            rep: {}\n          };\n          return $scope.leaderboard.push(obj);\n        });\n        _.map($scope.allCompetitionsArray, function(competition) {\n          var matches;\n          matches = competition.name.match(/\\b(\\w)/g);\n          return competition.initials = matches.join('');\n        });\n        return _.map($scope.updatedReps, function(rep) {\n          return _.each($scope.allCompetitionsArray, function(comp) {\n            var index;\n            index = _.findIndex(rep.competitions, function(c) {\n              return c.name === comp.name;\n            });\n            if (index === -1) {\n              rep.competitions = rep.competitions || [];\n              return rep.competitions.push({\n                name: comp.name\n              });\n            }\n          });\n        });\n      },\n      validateReps: function(rep) {\n        var comp, isRep;\n        $scope.selectedReps = $scope.selectedReps || [];\n        _.each($scope.selectedCompetition.leaderboard, function(item) {\n          return $scope.selectedReps.push(item.rep);\n        });\n        comp = _.find(rep.competitions, function(item) {\n          return item.name === $scope.selectedCompetition.name;\n        });\n        isRep = _.find($scope.selectedReps, function(item) {\n          return item && item.name === rep.name;\n        });\n        if (isRep || !comp) {\n          return true;\n        }\n      },\n      validateRepsAdded: function(rep) {\n        if (rep) {\n          return $scope.selectedReps.push(rep);\n        }\n      },\n      validateRepsRemoved: function($event, rep, idx) {\n        var index;\n        $event.stopPropagation();\n        $scope.leaderboard[idx].rep = {};\n        index = $scope.selectedReps.indexOf(rep);\n        if (index > -1) {\n          return $scope.selectedReps.splice(index, 1);\n        }\n      },\n      changeSelectedCompetition: function(competition) {\n        competition = JSON.parse(competition);\n        $scope.selectedCompetition = competition;\n        if (competition && competition.leaderboard) {\n          return $scope.leaderboard = competition.leaderboard;\n        } else {\n          return $scope.methods.init();\n        }\n      },\n      saveLeaderboad: function(competition) {\n        competition = JSON.parse(competition);\n        FirebaseService.updateLeaderboard(competition.name, $scope.leaderboard);\n        return toastr.success('Classificação salva com sucesso');\n      },\n      genreFilter: function(item) {\n        if ($scope.filter.genre === 'G') {\n          return item;\n        } else {\n          return item.genre === $scope.filter.genre;\n        }\n      }\n    };\n    $scope.methods.init();\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminSchedulesController', function($rootScope, $scope, $timeout, $interval, $state, FirebaseService) {\n    'ngInject';\n    $scope.events = [];\n    $rootScope.currentState = _.find($rootScope.menu, function(item) {\n      return item.state === $state.current.name;\n    });\n    $scope.events = [];\n    $scope.config = {\n      calendar: {\n        editable: true,\n        header: {\n          left: 'month agendaWeek agendaDay',\n          center: 'title',\n          right: 'today prev,next'\n        }\n      }\n    };\n    $scope.methods = {\n      addEvent: function() {\n        return $scope.events.push({});\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminRulesController', function($rootScope, $scope, $timeout, $interval, $state, FirebaseService, rules) {\n    'ngInject';\n    $scope.rules = rules;\n    $rootScope.currentState = _.find($rootScope.menu, function(item) {\n      return item.state === $state.current.name;\n    });\n    $scope.methods = {\n      save: function() {\n        return FirebaseService.updateRules($scope.rules);\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminRepsController', function($rootScope, $scope, $timeout, $interval, $filter, $state, $uibModal, $uibModalStack, toastr, FirebaseService) {\n    'ngInject';\n    var storage;\n    storage = firebase.storage();\n    $scope.rep = {};\n    $scope.reps = $scope.$parent.reps;\n    $scope.repsSearched = angular.copy($scope.reps);\n    $rootScope.currentState = _.find($rootScope.menu, function(item) {\n      return item.state === $state.current.name;\n    });\n    $scope.methods = {\n      init: function() {\n        _.map($scope.reps, function(rep) {\n          var joker;\n          storage.ref(\"logos/\" + rep.user + \".jpg\").getDownloadURL().then(function(url) {\n            return $timeout(function() {\n              rep.url = url;\n              return rep;\n            });\n          });\n          if (rep.competitions) {\n            joker = _.find(rep.competitions, function(comp) {\n              return comp.name === 'Coringa';\n            });\n            return rep.joker = joker ? joker.team[0] : '';\n          } else {\n            return rep.joker = '-';\n          }\n        });\n        return _.map($scope.repsSearched, function(rep) {\n          var joker;\n          storage.ref(\"logos/\" + rep.user + \".jpg\").getDownloadURL().then(function(url) {\n            return $timeout(function() {\n              rep.url = url;\n              return rep;\n            });\n          });\n          if (rep.competitions) {\n            joker = _.find(rep.competitions, function(comp) {\n              return comp.name === 'Coringa';\n            });\n            return rep.joker = joker ? joker.team[0] : '';\n          } else {\n            return rep.joker = '-';\n          }\n        });\n      },\n      getDetails: function(rep) {\n        var modalInstance;\n        return modalInstance = $uibModal.open({\n          animation: true,\n          windowTemplateUrl: 'window-template.html',\n          templateUrl: 'details.html',\n          controller: 'AdminRepsController',\n          backdrop: 'no',\n          resolve: {\n            rep: function() {\n              return rep;\n            }\n          }\n        });\n      },\n      saveRep: function() {\n        if ($scope.reps) {\n          $scope.rep.id = $scope.reps.length + 1;\n        } else {\n          $scope.rep.id = 1;\n        }\n        FirebaseService.createRep($scope.rep);\n        toastr.success('República criada com sucesso');\n        return $timeout(function() {\n          return $scope.methods.close();\n        }, 500);\n      },\n      createRep: function() {\n        var modalInstance;\n        modalInstance = $uibModal.open({\n          animation: true,\n          windowTemplateUrl: 'window-template.html',\n          templateUrl: 'create.html',\n          controller: 'AdminRepsController',\n          backdrop: 'no',\n          resolve: {\n            reps: function() {\n              return $scope.reps;\n            }\n          }\n        });\n        return modalInstance.result.then((function(reps) {\n          return console.log('closed');\n        }), function() {\n          return FirebaseService.getAllReps().then(function(result) {\n            $scope.reps = result;\n            $scope.repsSearched = angular.copy($scope.reps);\n            return $scope.methods.init();\n          });\n        });\n      },\n      close: function() {\n        return $uibModalStack.dismissAll();\n      }\n    };\n    $scope.$watch('search', function(newVal, oldval) {\n      if (newVal !== '') {\n        $scope.repsSearched = $filter('filter')($scope.reps, {\n          name: newVal\n        });\n      }\n      if (newVal === '') {\n        return $scope.repsSearched = angular.copy($scope.reps);\n      }\n    });\n    $scope.methods.init();\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').config(function($stateProvider, $urlRouterProvider) {\n    'ngInject';\n    return $stateProvider.state('register', {\n      url: '/register',\n      params: {\n        id: null\n      },\n      templateUrl: 'app/register/template.html',\n      controller: 'RegisterController',\n      controllerAs: 'register',\n      resolve: {\n        rep: [\n          'FirebaseService', 'StorageService', function(FirebaseService, StorageService) {\n            var user;\n            user = StorageService.getCurrentUser();\n            return FirebaseService.getRepById(user.id);\n          }\n        ],\n        competitions: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllCompetitions();\n          }\n        ],\n        prices: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getPrices();\n          }\n        ],\n        rules: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getRules();\n          }\n        ],\n        reps: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllReps();\n          }\n        ],\n        allCompetitionsArray: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getCompetitionsArray();\n          }\n        ],\n        points: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.updatePoints();\n          }\n        ]\n      }\n    });\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('RegisterController', function($rootScope, $scope, $state, $timeout, $interval, $localStorage, FirebaseService, StorageService, toastr, rep, reps, rules, competitions, allCompetitionsArray, prices) {\n    'ngInject';\n    var storage;\n    storage = firebase.storage();\n    $scope.rep = rep;\n    $scope.reps = reps;\n    $scope.updatedReps = angular.copy($scope.reps);\n    $scope.rules = rules;\n    $scope.allCompetitions = competitions;\n    $scope.allCompetitionsArray = allCompetitionsArray;\n    $scope.prices = prices;\n    $scope.totalCost = $scope.rep.totalCost || 0;\n    $scope.selectedPrice = {};\n    $scope.img = \"../assets/images/\" + $scope.rep.user + \".jpg\";\n    $scope.selectedCompetitions = $scope.rep.competitions || [];\n    $scope.user = StorageService.getCurrentUser().user;\n    $scope.participants = $scope.rep.participants || [];\n    $scope.parts = angular.copy($scope.participants);\n    $scope.filter = {\n      genre: 'G',\n      competitions: 'T'\n    };\n    $scope.currentMenu = {\n      name: 'Cadastro',\n      icon: 'fas fa-users fa-lg',\n      value: 'register'\n    };\n    $rootScope.menu = [\n      {\n        name: 'Cadastro',\n        icon: 'fas fa-users fa-lg',\n        value: 'register'\n      }, {\n        name: 'Horários',\n        icon: 'fas fa-clock fa-lg',\n        value: 'schedules'\n      }, {\n        name: 'Placar',\n        icon: 'fas fa-trophy fa-lg',\n        value: 'scores'\n      }, {\n        name: 'Regulamento',\n        icon: 'fas fa-exclamation-circle fa-lg',\n        value: 'rules'\n      }\n    ];\n    $scope.formInvalid = {\n      invalid: false,\n      errors: []\n    };\n    $scope.participant = {};\n    $scope.teams = [];\n    $scope.team = {\n      partitipants: [],\n      competition: {}\n    };\n    storage.ref(\"logos/\" + $scope.rep.user + \".jpg\").getDownloadURL().then(function(url) {\n      return $timeout(function() {\n        return rep.url = url;\n      });\n    });\n    $scope.methods = {\n      init: function() {\n        $scope.leaderboard = [];\n        $scope.selectedReps = [];\n        _.each($scope.reps, function(rep) {\n          var index, obj;\n          index = _.indexOf($scope.reps, rep);\n          obj = {\n            position: index + 1,\n            rep: {}\n          };\n          return $scope.leaderboard.push(obj);\n        });\n        _.map($scope.allCompetitionsArray, function(competition) {\n          var matches;\n          matches = competition.name.match(/\\b(\\w)/g);\n          return competition.initials = matches.join('');\n        });\n        return _.map($scope.updatedReps, function(rep) {\n          return _.each($scope.allCompetitionsArray, function(comp) {\n            var index;\n            index = _.findIndex(rep.competitions, function(c) {\n              return c.name === comp.name;\n            });\n            if (index === -1) {\n              rep.competitions = rep.competitions || [];\n              return rep.competitions.push({\n                name: comp.name\n              });\n            }\n          });\n        });\n      },\n      genreFilter: function(item) {\n        if ($scope.filter.genre === 'G') {\n          return item;\n        } else {\n          return item.genre === $scope.filter.genre;\n        }\n      },\n      setCurrentMenu: function(menu) {\n        $scope.currentMenu = menu;\n        return console.log(menu, $scope.currentMenu);\n      },\n      logout: function() {\n        StorageService.deleteCurrentUser();\n        return $state.go('home', {\n          logout: true\n        });\n      },\n      clearTeam: function(item) {\n        if (item.team) {\n          return item.team = [];\n        }\n      },\n      addParticipant: function() {\n        if ($scope.participant !== {}) {\n          $scope.participants.push($scope.participant);\n          return $scope.participant = {};\n        }\n      },\n      removeParticipant: function(index) {\n        return $scope.participants.splice(index, 1);\n      },\n      clear: function() {\n        return $scope.participants = [];\n      },\n      validateForm: function() {\n        var excludes, repAllowedComps;\n        $scope.formInvalid.errors = [];\n        repAllowedComps = $scope.parts >= 10 ? 3 : 4;\n        excludes = _.filter($scope.selectedCompetitions, function(comp) {\n          return comp.name === 'Futebol' || comp.name === 'Queimada';\n        });\n        _.each($scope.parts, function(part) {\n          var comps;\n          comps = [];\n          comps = _.difference(part.competitions, excludes);\n          if (comps.length > repAllowedComps) {\n            $scope.formInvalid.invalid = true;\n            return $scope.formInvalid.errors.push(part.name + \" está participando de \" + comps.length + \" provas. O máximo permitido é \" + repAllowedComps);\n          }\n        });\n        if ($scope.formInvalid.invalid) {\n          return toastr.error('', '', {\n            extraData: {\n              formInvalid: $scope.formInvalid\n            },\n            templates: {\n              toast: 'directives/toast/toast.html'\n            }\n          });\n        } else {\n          $scope.formInvalid.invalid = false;\n          return $scope.methods.save();\n        }\n      },\n      save: function() {\n        FirebaseService.updateRepTotalCost($scope.rep.id, $scope.totalCost);\n        FirebaseService.updateRepParticipants($scope.rep.id, $scope.participants);\n        FirebaseService.updateRepCompetitions($scope.rep.id, $scope.selectedCompetitions);\n        return toastr.success('Resgistro salvo com sucesso');\n      },\n      addCompsToParticipant: function(item) {\n        if (item.team) {\n          return _.map($scope.parts, function(part) {\n            var index, isPartOfTeam, isParticipating;\n            part.competitions = part.competitions || [];\n            isPartOfTeam = _.find(item.team, function(p) {\n              return p.name === part.name;\n            });\n            isParticipating = _.find(part.competitions, function(c) {\n              return c.name === item.name;\n            });\n            if (isPartOfTeam && !_.find(part.competitions, function(c) {\n              return c.name === item.name;\n            })) {\n              part.competitions.push(item);\n            }\n            if (!isPartOfTeam && isParticipating) {\n              index = part.competitions.indexOf(item);\n              return part.competitions.splice(index, 1);\n            }\n          });\n        }\n      },\n      getTotalPrice: function(newVal) {\n        $scope.totalCost = 0;\n        return _.each(newVal, function(item) {\n          var price;\n          price = item.team ? item.price * item.team.length : item.price * 0;\n          $scope.totalCost += price;\n          return $scope.methods.addCompsToParticipant(item);\n        });\n      }\n    };\n    $scope.$watch('selectedCompetitions', function(newVal, oldVal) {\n      return $scope.methods.getTotalPrice(newVal);\n    }, true);\n    $scope.methods.init();\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module(\"interreps\").service(\"HomeService\", function($http, $q) {\n    return {};\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').config(function($stateProvider, $urlRouterProvider) {\n    'ngInject';\n    $stateProvider.state('home', {\n      url: '/',\n      params: {\n        logout: null\n      },\n      templateUrl: 'app/main/template.html',\n      controller: 'MainController',\n      controllerAs: 'main',\n      resolve: {\n        users: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllUsers();\n          }\n        ],\n        reps: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllReps();\n          }\n        ]\n      }\n    });\n    return $urlRouterProvider.otherwise('/');\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').directive(\"ngBgSlideshow\", function($interval) {\n    'ngInject';\n    return {\n      restrict: 'A',\n      scope: {\n        ngBgSlideshow: '&',\n        interval: '='\n      },\n      templateUrl: 'app/components/bgCarousel/template.html',\n      link: function(scope, elem, attr) {\n        var change;\n        scope.$watch('ngBgSlideshow', function(val) {\n          scope.images = val();\n          return scope.active_image = 0;\n        });\n        return change = $interval((function() {\n          scope.active_image++;\n          if (scope.active_image >= scope.images.length) {\n            scope.active_image = 0;\n          }\n        }), scope.interval || 1000);\n      }\n    };\n  }).controller('MainController', function($rootScope, $scope, $state, $timeout, $interval, $localStorage, FirebaseService, StorageService, toastr, users, reps) {\n    'ngInject';\n    $scope.users = users;\n    $scope.reps = reps;\n    $scope.$storage = $localStorage;\n    $scope.showForm = false;\n    $scope.user = {\n      email: void 0,\n      password: void 0,\n      user: void 0\n    };\n    $scope.methods = {\n      changeView: function() {\n        return $scope.showForm = !$scope.showForm;\n      },\n      login: function() {\n        var currentRep, currentUser, user;\n        StorageService.deleteCurrentUser();\n        currentUser = _.find($scope.users, function(user) {\n          return user.user === $scope.user.user && user.password === $scope.user.password;\n        });\n        currentRep = _.find($scope.reps, function(rep) {\n          return rep.user === $scope.user.user && rep.password === $scope.user.password;\n        });\n        if (currentUser) {\n          user = {\n            type: 'admin',\n            user: currentUser\n          };\n          StorageService.setCurrentUser(user);\n          $timeout(function() {\n            return $state.go('admin.reps', {\n              id: currentUser.id\n            });\n          }, 1000);\n        }\n        if (currentRep) {\n          user = {\n            type: 'rep',\n            user: currentRep\n          };\n          StorageService.setCurrentUser(currentRep);\n          $timeout(function() {\n            return $state.go('register', {\n              id: currentRep.id\n            });\n          }, 1000);\n        }\n        if (!currentUser && !currentRep) {\n          return toastr.error('Login e/ou senha inválido(s)');\n        }\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').config(function($stateProvider, $urlRouterProvider) {\n    'ngInject';\n    return $stateProvider.state('admin', {\n      url: '/admin/:id',\n      abstract: true,\n      params: {\n        id: null\n      },\n      templateUrl: 'app/admin/template.html',\n      controller: 'AdminController',\n      resolve: {\n        reps: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllReps();\n          }\n        ],\n        user: [\n          'FirebaseService', '$stateParams', function(FirebaseService, $stateParams) {\n            return FirebaseService.getUserById($stateParams.id);\n          }\n        ]\n      }\n    }).state('admin.reps', {\n      url: '/reps',\n      templateUrl: 'app/admin/reps/template.html',\n      controller: 'AdminRepsController'\n    }).state('admin.schedules', {\n      url: '/schedules',\n      templateUrl: 'app/admin/schedules/template.html',\n      controller: 'AdminSchedulesController'\n    }).state('admin.scores', {\n      url: '/scores',\n      templateUrl: 'app/admin/scores/template.html',\n      controller: 'AdminScoresController',\n      resolve: {\n        reps: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllReps();\n          }\n        ],\n        competitions: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getAllCompetitions();\n          }\n        ],\n        allCompetitionsArray: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getCompetitionsArray();\n          }\n        ],\n        points: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.updatePoints();\n          }\n        ]\n      }\n    }).state('admin.rules', {\n      url: '/rules',\n      templateUrl: 'app/admin/rules/template.html',\n      controller: 'AdminRulesController',\n      resolve: {\n        rules: [\n          'FirebaseService', function(FirebaseService) {\n            return FirebaseService.getRules();\n          }\n        ]\n      }\n    });\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').controller('AdminController', function($rootScope, $scope, $state, $timeout, $interval, $localStorage, StorageService, user, reps) {\n    'ngInject';\n    $scope.state = $state;\n    $scope.$storage = $localStorage;\n    $scope.user = user;\n    $scope.reps = reps;\n    $scope.status = {\n      isopen: false\n    };\n    $scope.logout = {\n      isopen: false\n    };\n    $scope.img = \"../assets/images/\" + $scope.user.user + \".png\";\n    $rootScope.menu = [\n      {\n        name: 'Repúblicas',\n        icon: 'fas fa-users fa-lg',\n        state: 'admin.reps'\n      }, {\n        name: 'Horários',\n        icon: 'fas fa-clock fa-lg',\n        state: 'admin.schedules'\n      }, {\n        name: 'Placar',\n        icon: 'fas fa-trophy fa-lg',\n        state: 'admin.scores'\n      }, {\n        name: 'Regulamento',\n        icon: 'fas fa-exclamation-circle fa-lg',\n        state: 'admin.rules'\n      }\n    ];\n    $rootScope.currentState = _.find($rootScope.menu, function(item) {\n      return item.state === $scope.state.current.name;\n    });\n    $scope.methods = {\n      logout: function() {\n        StorageService.deleteCurrentUser();\n        return $state.go('home', {\n          logout: true\n        });\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module(\"interreps\").service(\"StorageService\", function($http, $q, $localStorage, $rootScope) {\n    return {\n      getCurrentUser: function() {\n        return $localStorage.user;\n      },\n      setCurrentUser: function(user) {\n        return $localStorage.user = user;\n      },\n      deleteCurrentUser: function() {\n        return $localStorage.user = {};\n      }\n    };\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').run(function($log, $rootScope, $state, $templateCache, StorageService, offline, connectionStatus) {\n    'ngInject';\n    $log.debug('runBlock end');\n    console.log(connectionStatus.isOnline());\n    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams, options) {\n      if (!StorageService.getCurrentUser().user && fromState.name !== '') {\n        console.log('1');\n        if (!toParams.logout) {\n          event.preventDefault();\n          $state.go('home');\n        }\n      }\n      if (StorageService.getCurrentUser().user && toState.name === 'home') {\n        console.log('2');\n        event.preventDefault();\n      }\n      if (StorageService.getCurrentUser().user && (fromState.name === '' && toState.name === 'home')) {\n        console.log('3');\n        if (StorageService.getCurrentUser().type === 'admin') {\n          return $state.go('admin.reps', {\n            id: StorageService.getCurrentUser().user.id\n          });\n        } else {\n          return $state.go('register', {\n            id: StorageService.getCurrentUser().user.id\n          });\n        }\n      }\n    });\n    return $templateCache.put('directives/toast/toast.html', '<div class=\"{{toastClass}} {{toastType}}\" ng-click=\"tapToast()\">' + '  <div ng-switch on=\"allowHtml\">' + '    <div ng-switch-default ng-if=\"title\" class=\"{{titleClass}}\" aria-label=\"{{title}} style=\"font-size:20px!important; margin-bottom:10px; padding-left:40px; letter-spacing:1;\">{{title}}</div>' + '    <div ng-switch-default class=\"{{messageClass}}\" aria-label=\"{{message}}\" >{{message}}</div>' + '    <div ng-switch-when=\"true\" ng-if=\"title\" class=\"{{titleClass}}\" ng-bind-html=\"title\" style=\"font-size:20px!important; margin-bottom:10px; padding-left:40px; letter-spacing:1;\"></div>' + '    <div ng-switch-when=\"true\" class=\"{{messageClass}}\" ng-bind-html=\"message\" ></div>' + '  </div>' + '  <ul class\"errors\" style=\"padding: 0 0 0 20px;\">' + '   <li ng-repeat=\"error in extraData.formInvalid.errors track by $index\"><span>{{error}}</span></li>' + '  </ul>' + '  <progress-bar ng-if=\"progressBar\"></progress-bar>' + '</div>');\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').constant('MOMENT', moment).constant('ADMINS', ['0hzjcgDnBLVByLbQ1ttkAzCShv92']);\n\n}).call(this);\n\n\n\n(function() {\n  angular.module('interreps').config(function($logProvider, toastrConfig) {\n    'ngInject';\n    $logProvider.debugEnabled(true);\n    return angular.extend(toastrConfig, {\n      autoDismiss: true,\n      closeButton: true,\n      progressBar: true,\n      preventDuplicates: false,\n      preventOpenDuplicates: true,\n      newestOnTop: true,\n      maxOpened: 2,\n      timeOut: 5000,\n      extendedTimeOut: 5000,\n      positionClass: 'toast-top-right',\n      target: 'body'\n    });\n  });\n\n}).call(this);\n\n\n\n(function() {\n  angular.module(\"interreps\").service(\"FirebaseService\", function($http, $q) {\n    var auth, database, service;\n    database = firebase.database();\n    auth = firebase.auth();\n    service = {\n      getCurrentAuthuser: function() {\n        return auth.currentUser;\n      },\n      getAllUsers: function() {\n        return database.ref('users').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      getUserById: function(id) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('users').child(index).once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      getAllReps: function() {\n        return database.ref('reps').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      getAllRepsOrderedByPoints: function() {\n        return database.ref('reps').orderByKey('points').then(function(result) {\n          console.log(result.val());\n          return result.val();\n        });\n      },\n      getRepById: function(id) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('reps').child(index).once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      getRepCompetitions: function(id) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('reps').child('index').child('competitions').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      updateRepCompetitions: function(id, competitions) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('reps').child(index).child('competitions').set(competitions);\n      },\n      updateRepParticipants: function(id, participants) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('reps').child(index).child('participants').set(participants);\n      },\n      updateRepTotalCost: function(id, totalCost) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('reps').child(index).child('totalCost').set(totalCost);\n      },\n      updateRepPoints: function(id, points) {\n        var index;\n        id = parseInt(id);\n        index = id - 1;\n        return database.ref('reps').child(index).child('points').set(points);\n      },\n      createRep: function(rep) {\n        return database.ref('reps').once('value').then(function(result) {\n          var index, ref;\n          index = result.val().length;\n          ref = database.ref('reps');\n          return ref.child('/' + index).set(rep);\n        });\n      },\n      getAllCompetitions: function() {\n        return database.ref('competitions').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      getCompetitionsArray: function() {\n        return database.ref('allCompetitions').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      updateLeaderboard: function(key, leaderboard) {\n        var reps;\n        reps = [];\n        database.ref('reps').once('value').then(function(result) {\n          return reps = result.val();\n        });\n        database.ref('allCompetitions').once('value').then(function(result) {\n          var allCompetitions, compAllIndex, index;\n          index = _.findIndex(result.val(), function(item) {\n            return item.name === key;\n          });\n          allCompetitions = result.val();\n          compAllIndex = _.findIndex(allCompetitions, function(comp) {\n            return comp.name === key;\n          });\n          return database.ref('allCompetitions').child(index).child('leaderboard').set(leaderboard).then(function(result) {\n            return _.each(leaderboard, function(register) {\n              var compIndex, i, rep;\n              if (register.rep !== {}) {\n                i = _.findIndex(reps, function(rep) {\n                  return rep.name === register.rep.name;\n                });\n                rep = _.find(reps, function(rep) {\n                  return rep.name === register.rep.name;\n                });\n                if (rep) {\n                  compIndex = _.findIndex(rep.competitions, function(comp) {\n                    return comp.name === key;\n                  });\n                  if (i !== -1 && compIndex !== -1) {\n                    database.ref('reps').child(i).child('competitions').child(compIndex).child('position').set(register.position);\n                    return database.ref('reps').child(i).child('competitions').child(compIndex).child('points').set(allCompetitions[compAllIndex].points[register.position - 1]);\n                  }\n                }\n              }\n            });\n          });\n        });\n        return service.updatePoints();\n      },\n      getRules: function() {\n        return database.ref('rules').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      updateRules: function(rules) {\n        return database.ref('rules').set(rules);\n      },\n      getPrices: function() {\n        return database.ref('prices').once('value').then(function(result) {\n          return result.val();\n        });\n      },\n      updatePoints: function() {\n        return $q.all({\n          reps: service.getAllReps(),\n          competitions: service.getCompetitionsArray()\n        }).then(function(result) {\n          var competitions, reps;\n          reps = result.reps;\n          competitions = result.competitions;\n          return _.each(reps, function(rep) {\n            rep.points = 0;\n            _.each(competitions, function(comp) {\n              if (comp.leaderboard) {\n                return _.each(comp.leaderboard, function(item) {\n                  if (item.rep && rep.name === item.rep.name) {\n                    return rep.points += comp.points[item.position - 1];\n                  }\n                });\n              }\n            });\n            return service.updateRepPoints(rep.id, rep.points);\n          });\n        });\n      }\n    };\n    return service;\n  });\n\n}).call(this);\n\n\n\n/*! Angular offline v0.1.0 | (c) 2016 Greg Bergé | License MIT */\nangular\n.module('offline', [])\n.service('connectionStatus', ['$window', '$rootScope', function ($window, $rootScope) {\n\n  /**\n   * Test if the connection is online.\n   *\n   * @returns {boolean}\n   */\n\n  this.isOnline = function () {\n    return $window.navigator.onLine;\n  };\n\n  /**\n   * Listen online and offline events.\n   *\n   * @param {string} event\n   * @param {function} listener\n   */\n\n  this.$on = function (event, listener) {\n    $window.addEventListener(event, function () {\n      $rootScope.$apply(listener);\n    });\n  };\n}])\n.provider('offline', function () {\n  var offlineProvider = this;\n  var $requester;\n\n  /**\n   * Enable or disable debug mode.\n   *\n   * @param {boolean} value\n   * @returns {offlineProvider}\n   */\n\n  offlineProvider.debug = function (value) {\n    this._debug = value;\n    return this;\n  };\n\n  this.$get = ['$q', '$window', '$log', 'connectionStatus', '$cacheFactory',\n  function ($q, $window, $log, connectionStatus, $cacheFactory) {\n    var offline = {};\n    var defaultStackCache = $cacheFactory('offline-request-stack');\n\n    /**\n     * Log in debug mode.\n     *\n     * @param {...*} logs\n     */\n\n    function log() {\n      if (!offlineProvider._debug)\n        return;\n\n      return $log.debug.apply($log, ['%cOffline', 'font-weight: bold'].concat([].slice.call(arguments)));\n    }\n\n    /**\n     * Clean cache if expired.\n     *\n     * @param {object} cache Cache\n     * @param {string} key Cache key\n     */\n\n    function cleanIfExpired(cache, key) {\n      if (cache === true)\n        cache = $requester.defaults.cache || $cacheFactory.get('$http');\n      var info = cache.info(key);\n      if (info && info.isExpired)\n        cache.remove(key);\n    }\n\n    /**\n     * Get stack cache.\n     *\n     * @returns {object} Cache\n     */\n\n    function getStackCache() {\n      return offline.stackCache || defaultStackCache;\n    }\n\n    /**\n     * Get stack.\n     *\n     * @returns {object[]}\n     */\n\n    function getStack() {\n      var cache = getStackCache();\n      return cache.get('stack') || [];\n    }\n\n    /**\n     * Set stack.\n     *\n     * @param {[]object} stack\n     */\n\n    function saveStack(stack) {\n      var cache = getStackCache();\n      cache.put('stack', stack);\n    }\n\n    /**\n     * Push a request to the stack.\n     *\n     * @param {object} request\n     */\n\n    function stackPush(request) {\n      var stack = getStack();\n      stack.push(request);\n      saveStack(stack);\n    }\n\n    /**\n     * Shift a request from the stack.\n     *\n     * @returns {object} request\n     */\n\n    function stackShift() {\n      var stack = getStack();\n      var request = stack.shift();\n      saveStack(stack);\n      return request;\n    }\n\n    /**\n     * Store request to be played later.\n     *\n     * @param {object} config Request config\n     */\n\n    function storeRequest(config) {\n      stackPush({\n        url: config.url,\n        data: config.data,\n        headers: config.headers,\n        method: config.method,\n        offline: config.offline,\n        timeout: angular.isNumber(config.timeout) ? config.timeout : undefined\n      });\n    }\n\n    /**\n     * Process next request from the stack.\n     *\n     * @returns {Promise|null}\n     */\n\n    function processNextRequest() {\n      var request = stackShift();\n\n      if (!request)\n        return $q.reject(new Error('empty stack'));\n\n      log('will process request', request);\n\n      return $requester(request)\n        .then(function (response) {\n          log('request success', response);\n          return response;\n        }, function (error) {\n          log('request error', error);\n          return $q.reject(error);\n        });\n    }\n\n    /**\n     * Process all the stack.\n     *\n     * @returns {Promise}\n     */\n\n    offline.processStack = function () {\n      if (!connectionStatus.isOnline())\n        return;\n\n      return processNextRequest()\n      .then(offline.processStack)\n      .catch(function (error) {\n        if (error && error.message === 'empty stack') {\n          log('all requests completed');\n          return;\n        }\n\n        if (error && error.message === 'request queued') {\n          log('request has been queued, stop');\n          return;\n        }\n\n        return offline.processStack();\n      });\n    };\n\n    /**\n     * Run offline using a requester ($http).\n     *\n     * @param {$http} requester\n     */\n\n    offline.start = function (requester) {\n      $requester = requester;\n      connectionStatus.$on('online', offline.processStack);\n      offline.processStack();\n    };\n\n    /**\n     * Expose interceptors.\n     */\n\n    offline.interceptors = {\n      request: function (config) {\n        // If there is not offline options, do nothing.\n        if (!config.offline)\n          return config;\n\n        log('intercept request', config);\n\n        // Automatically set cache to true.\n        if (!config.cache)\n          config.cache = true;\n\n        // For GET method, Angular will handle it.\n        if (config.method === 'GET') {\n          // Online we clean the cache.\n          if (connectionStatus.isOnline())\n            cleanIfExpired(config.cache, config.url);\n\n          return config;\n        }\n\n        // For other methods in offline mode, we will put them in wait.\n        if (!connectionStatus.isOnline()) {\n          storeRequest(config);\n          return $q.reject(new Error('request queued'));\n        }\n\n        return config;\n      }\n    };\n\n    return offline;\n  }];\n})\n.config(['$provide', '$httpProvider', function ($provide, $httpProvider) {\n  $provide.factory('offlineInterceptor', ['offline', function (offline) {\n    return offline.interceptors;\n  }]);\n\n  $httpProvider.interceptors.push('offlineInterceptor');\n}]);\n\nangular.module(\"interreps\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/admin/template.html\",\"<div class=admin><div class=navbar><div class=navbar-container><div class=aaauso-logo></div><div class=admin-menu><ul class=ul-options><li class=menu-name ng-class=\\\"{\\'active\\' : state.current.name === item.state}\\\" ng-repeat=\\\"item in menu\\\"><a ui-sref={{item.state}}><span><i class={{item.icon}}></i> <span class=name>{{item.name}}</span></span></a></li></ul><div class=\\\"btn-group ul-options-dropdown\\\" uib-dropdown is-open=status.isopen uib-dropdown dropdown-append-to-body><button id=single-button type=button class=\\\"btn btn-outline\\\" uib-dropdown-toggle>{{currentState.name}} <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=single-button><li role=menuitem ng-repeat=\\\"item in menu\\\" ng-class=\\\"{\\'active\\' : state.current.name === item.state}\\\"><a ui-sref={{item.state}}>{{item.name}}</a></li></ul></div></div><div class=user-info><div class=rep-logo ng-style=\\\"{ \\'background-image\\': \\'url(\\' + img + \\')\\' }\\\"></div><div class=rep-name><div class=rep-name-container><div class=rep-name-container-cell><div class=\\\"btn-group ul-options-dropdown\\\" uib-dropdown is-open=logout.isopen uib-dropdown dropdown-append-to-body><button id=single-button type=button class=icon-btn uib-dropdown-toggle><span class=rep-name-label>{{user.name}}</span> <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=single-button><li role=menuitem><a ng-click=methods.logout() style=\\\"cursor: pointer\\\">logout</a></li></ul></div></div></div></div></div></div></div><div class=admin-layer><div class=admin-parent-container><div class=admin-container><div ui-view class=screen-height></div></div></div></div></div>\");\n$templateCache.put(\"app/main/template.html\",\"<div id=home><div class=home-container><div ng-bg-slideshow=\\\"[ \\'/assets/images/interreps1.jpg\\', \\'/assets/images/interreps2.jpg\\', \\'/assets/images/interreps3.jpg\\']\\\" interval=5000></div><!-- <div class=\\\"image\\\"></div> --></div><div class=home-container-layer><div class=home-center-container><div class=home-main><div class=home-main-container><div class=home-sentence><div class=home-divider><span>AAAUSO X</span></div></div><div class=home-content><div class=home-divider><div class=logo><!-- <h1>Atlética Unesp Sorocaba</h1> --><div class=logo-bg></div></div><div class=login><button type=button class=\\\"btn btn-outline login-button\\\" ng-if=!showForm ng-click=methods.changeView()>Login</button><div class=login-container ng-if=showForm><span class=login-title>Login</span><form ng-submit=methods.login() class=login-form><div class=typeble><div class=login-typed-input><input type=text placeholder=Usuário class=\\\"email animated clean-padding-sides\\\" ng-model=user.user required></div><div class=login-typed-input><input type=password placeholder=Senha class=\\\"password animated clean-padding-sides\\\" ng-model=user.password required></div></div><div class=login-actions><button type=button ng-disabled=\\\"!user.user || !user.password\\\" class=\\\"btn btn-login\\\" ng-click=methods.login()>Login</button></div></form></div><div class=back-button><button type=button class=\\\"btn btn-outline\\\" ng-if=showForm ng-click=methods.changeView()>Voltar</button></div></div></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/register/template.html\",\"<div class=register><div class=navbar><div class=navbar-container><div class=aaauso-logo></div><div class=admin-menu><ul class=ul-options><li class=menu-name ng-class=\\\"{\\'active\\' : currentMenu.value === item.value}\\\" ng-repeat=\\\"item in menu\\\"><a ng-click=methods.setCurrentMenu(item)><span><i class={{item.icon}}></i> <span class=name>{{item.name}}</span></span></a></li></ul><div class=\\\"btn-group ul-options-dropdown\\\" uib-dropdown is-open=status.isopen uib-dropdown dropdown-append-to-body><button id=single-button type=button class=\\\"btn btn-outline\\\" uib-dropdown-toggle>{{currentMenu.name}} <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=single-button><li role=menuitem ng-repeat=\\\"item in menu\\\" ng-class=\\\"{\\'active\\' : currentMenu.value === item.value}\\\"><a ng-click=methods.setCurrentMenu(item)>{{item.name}}</a></li></ul></div></div><div class=user-info><div class=rep-logo ng-style=\\\"{ \\'background-image\\': \\'url(\\' + rep.logo + \\')\\' }\\\"></div><div class=rep-name><div class=rep-name-container><div class=\\\"btn-group ul-options-dropdown\\\" uib-dropdown is-open=logout.isopen uib-dropdown dropdown-append-to-body><button id=single-button type=button class=icon-btn uib-dropdown-toggle><span class=rep-name-label>República {{rep.name}}</span> <span class=caret></span></button><ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby=single-button><li role=menuitem><a ng-click=methods.logout() style=\\\"cursor: pointer\\\">sair</a></li></ul></div></div></div></div></div></div><div class=register-layer><div class=register-parent-container><div class=register-container id=register ng-if=\\\"currentMenu.value === \\'register\\'\\\"><div class=register-title><h1>Inscrição (Custo total: R${{totalCost || 0}},00)</h1></div><div class=register-form><div class=\\\"col-md-6 names-form\\\"><h3 class=register-title>Participantes</h3><form novalidate ng-submit=methods.addParticipant()><div class=register-input><label>Escreva o nome e o apelido de cada participante e clique no botão ou pressione \\'enter\\' para adicioná-lo:</label><input type=text placeholder=Nome class=\\\"email animated clean-padding-sides\\\" ng-model=participant.name required> <input type=text placeholder=Apelido class=\\\"email animated clean-padding-sides\\\" ng-model=participant.username required> <button class=icon-btn type=submit ng-click=methods.addParticipant ng-disabled=\\\"!participant.name || !participant.username\\\"><i class=\\\"add-participant fas fa-plus-circle fa-lg\\\"></i></button></div></form><div class=participants><div ng-repeat=\\\"participant in participants track by $index\\\"><span class=\\\"tag animated animated-fill\\\"><span ng-if=::removeCallback class=tag-remove-btn ng-click=methods.remove(index)></span> <a>{{participant.name}} ({{participant.username}})</a> <button class=icon-btn ng-click=methods.removeParticipant($index)><i class=\\\"fas fa-trash\\\"></i></button></span></div></div></div><div class=\\\"col-md-6 competitions-form\\\"><div><div class=section-info><label>Selecione as provas que desejam participar:</label></div><div class=col-md-4><label class=comp-type>Esportes</label><div class=checkboxes ng-repeat=\\\"comp in allCompetitions.sports track by $index\\\"><label class=\\\"custom-checkboxes icon-btn\\\" ng-if=\\\"(comp.genre && comp.genre == rep.genre) || !comp.genre\\\"><input class=check type=checkbox checklist-change=methods.clearTeam(comp) data-checklist-model=selectedCompetitions data-checklist-value=comp checklist-comparator=.name> <i class=\\\"unchecked far fa-square fa-lg\\\"></i> <i class=\\\"checked far fa-check-square fa-lg\\\"></i> <span>{{comp.name}}</span></label></div></div><div class=col-md-4><label class=comp-type>Não alcóolicos</label><div class=checkboxes ng-repeat=\\\"comp in allCompetitions.nonAlcoholic.individual track by $index\\\"><label class=\\\"custom-checkboxes icon-btn\\\"><input class=check type=checkbox checklist-change=methods.clearTeam(comp) data-checklist-model=selectedCompetitions data-checklist-value=comp checklist-comparator=.name> <i class=\\\"unchecked far fa-square fa-lg\\\"></i> <i class=\\\"checked far fa-check-square fa-lg\\\"></i> <span>{{comp.name}}</span></label></div><div class=checkboxes ng-repeat=\\\"comp in allCompetitions.nonAlcoholic.team track by $index\\\"><label class=\\\"custom-checkboxes icon-btn\\\" ng-if=\\\"(comp.genre && comp.genre == rep.genre) || !comp.genre\\\"><input class=check type=checkbox checklist-change=methods.clearTeam(comp) data-checklist-model=selectedCompetitions data-checklist-value=comp checklist-comparator=.name> <i class=\\\"unchecked far fa-square fa-lg\\\"></i> <i class=\\\"checked far fa-check-square fa-lg\\\"></i> <span>{{comp.name}}</span></label></div></div><div class=col-md-4><label class=comp-type>Alcóolicos</label><div class=checkboxes ng-repeat=\\\"comp in allCompetitions.alcoholic.individual track by $index\\\"><label class=\\\"custom-checkboxes icon-btn\\\"><input class=check type=checkbox checklist-change=methods.clearTeam(comp) data-checklist-model=selectedCompetitions data-checklist-value=comp checklist-comparator=.name> <i class=\\\"unchecked far fa-square fa-lg\\\"></i> <i class=\\\"checked far fa-check-square fa-lg\\\"></i> <span>{{comp.name}}</span></label></div><div class=checkboxes ng-repeat=\\\"comp in allCompetitions.alcoholic.team track by $index\\\"><label class=\\\"custom-checkboxes icon-btn\\\"><input class=check type=checkbox checklist-change=methods.clearTeam(comp) data-checklist-model=selectedCompetitions data-checklist-value=comp checklist-comparator=.name> <i class=\\\"unchecked far fa-square fa-lg\\\"></i> <i class=\\\"checked far fa-check-square fa-lg\\\"></i> <span>{{comp.name}}</span></label></div></div></div></div><div class=col-md-12><h3 class=register-title>Participantes X Provas</h3><label>Agora selecione o(s) participante(s) que irá(ão) competir cada prova:</label><div class=selects ng-repeat=\\\"comp in selectedCompetitions track by $index\\\"><label>{{comp.name}} (max: {{comp.maxParticipants}})</label><ui-select ng-model=comp.team theme=bootstrap multiple limit={{comp.maxParticipants}}><ui-select-match><span ng-bind=$item.name></span></ui-select-match><ui-select-choices repeat=\\\"item in participants | filter: $select.search track by $index\\\"><span>{{item.name}} (item.username)</span></ui-select-choices></ui-select></div></div><div class=\\\"row save-btn-row\\\"><button type=button class=\\\"btn btn-outline\\\" ng-click=methods.validateForm()>Salvar</button></div></div></div><div class=schedules-container id=schedule ng-if=\\\"currentMenu.value === \\'schedule\\'\\\">schedule</div><div class=scores-container id=scores ng-if=\\\"currentMenu.value === \\'scores\\'\\\"><uib-tabset active=0><uib-tab index=0 heading=\\\"Classificação geral\\\"><div ng-include=\\\"\\'app/admin/scores/abas/geral.html\\'\\\"></div></uib-tab><!-- <uib-tab index=\\\"1\\\" heading=\\\"Classificação por prova\\\"><div ng-include=\\\"\\'app/admin/scores/abas/byComps.html\\'\\\"></div></uib-tab> --></uib-tabset></div><div class=rules-container id=rules ng-if=\\\"currentMenu.value === \\'rules\\'\\\"><pre>\\n          {{ rules }}\\n        </pre></div></div></div></div>\");\n$templateCache.put(\"app/admin/reps/template.html\",\"<div class=admin-reps-container><div class=row><div class=\\\"col-xs-12 col-sm-8 col-md-9 col-lg-10\\\"><div class=input-search><input type=text ng-model=search class=search placeholder=Pesquisar...></div></div><div class=\\\"col-xs-12 col-sm-4 col-md-3 col-lg-2\\\" ng-style=\\\"{\\'margin-top\\': \\'10px\\'}\\\"><span>{{reps.length || 0}} repúblicas cadastradas</span></div></div><div class=\\\"row search-row\\\"><div class=\\\"col-xs-12 col-sm-8 col-md-9 col-lg-10\\\"></div><div class=\\\"col-xs-12 col-sm-4 offset-sm-8 col-md-3 offset-md-9 col-lg-2 offset-lg-12\\\" ng-style=\\\"{\\'margin-top\\': \\'10px\\'}\\\"><button type=button class=\\\"btn btn-outline\\\" ng-click=methods.createRep()>Cadastrar nova rep</button></div></div><div class=row><div deckgrid source=repsSearched class=deckgrid><div class=card ng-click=mother.methods.getDetails(card)><div class=rep-logo ng-style=\\\"{ \\'background-image\\': \\'url(\\' + card.url + \\')\\' }\\\"></div><div class=rep-fast-info><h2 class=name ng-bind=::card.name></h2><h6 class=status>Coringa: {{::card.joker}}</h6></div></div></div></div></div><!-- Details template --><script type=text/ng-template id=details.html><div id=\\\"modal-rep-details\\\">\\n    <div class=\\\"window-header\\\">\\n      <h1 class=\\\"window-description-header\\\">República {{rep.name}}</h1>\\n    </div>\\n      <div class=\\\"window-content\\\">\\n        <table class=\\\"table table-striped rep-infos-table\\\">\\n          <thead>\\n            <tr>\\n              <th class=\\\"column-1\\\">Provas</th>\\n              <th class=\\\"column-2\\\">Participantes</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr ng-if=\\\"rep.competitions.length\\\" ng-repeat=\\\"comp in rep.competitions\\\">\\n              <td class=\\\"column-1\\\">{{comp.name}}</td>\\n              <td class=\\\"column-2\\\">\\n                <ul ng-repeat=\\\"part in comp.team\\\">\\n                  <li>\\n                    - {{part.name}} (part.username)\\n                  </li>\\n                </ul>\\n              </td>\\n            </tr>\\n            <tr ng-if=\\\"!rep.competitions.length\\\">\\n              <td class=\\\"no-data-td\\\">Nenhum dado encontrado.</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"window-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-outline\\\" ng-click=\\\"methods.close()\\\">Fechar</button>\\n      </div>\\n    </form>\\n  </div></script><!-- Create template --><script type=text/ng-template id=create.html><div id=\\\"modal-rep-create\\\">\\n    <div class=\\\"window-header\\\">\\n      <h1 class=\\\"window-description-header\\\">Cadastrar nova república</h1>\\n    </div>\\n\\n      <div class=\\\"window-content\\\">\\n        <form novalidade class=\\\"create-form\\\">\\n          <div class=\\\"row input-row\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 input-col\\\">\\n              <label>Nome:</label>\\n              <input type=\\\"text\\\" ng-model=\\\"rep.name\\\" placeholder=\\\"Digite...\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 input-col\\\">\\n              <label>Gênero:</label>\\n              <select name=\\\"genre-select\\\" id=\\\"genre-select\\\" ng-model=\\\"rep.genre\\\">\\n                <option value=\\\"\\\" disabled selected>Selecione</option>\\n                <option value=\\\"F\\\">Feminino</option>\\n                <option value=\\\"M\\\">Masculino</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"row input-row\\\">\\n            <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 input-col\\\">\\n              <label>Email:</label>\\n              <input type=\\\"text\\\" ng-model=\\\"rep.email\\\" placeholder=\\\"Digite...\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 input-col\\\">\\n              <label>Usúario:</label>\\n              <input type=\\\"text\\\" ng-model=\\\"rep.user\\\" placeholder=\\\"Digite...\\\"/>\\n            </div>\\n            <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 input-col\\\">\\n              <label>Senha:</label>\\n              <input type=\\\"text\\\" ng-model=\\\"rep.password\\\" placeholder=\\\"Digite...\\\"/>\\n            </div>\\n          </div>\\n          <div class=\\\"row input-row-button\\\">\\n            <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline\\\" ng-click=\\\"methods.saveRep()\\\">Salvar</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"window-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn-outline\\\" ng-click=\\\"methods.close()\\\">Fechar</button>\\n      </div>\\n    </form>\\n  </div></script><!-- Window template --><script type=text/ng-template id=window-template.html><div id=\\\"create-bordero\\\" class=\\\"window-modal\\\" modal-in-class=\\\"window-open\\\" ng-style=\\\"{\\'z-index\\': 1000, display: \\'block\\'}\\\" ng-click=\\\"close($event)\\\">\\n  <div class=\\\"window-inner\\\" ng-transclude></div>\\n</div></script>\");\n$templateCache.put(\"app/admin/rules/template.html\",\"<div class=rules-container><a href=# editable-textarea=rules e-rows=10 e-cols=40 onaftersave=methods.save()><pre>\\n      {{ rules || \\'Regulamento\\'}}\\n    </pre></a></div>\");\n$templateCache.put(\"app/admin/schedules/template.html\",\"<div class=schedules-container></div>\");\n$templateCache.put(\"app/admin/scores/template.html\",\"<div class=scores-container><uib-tabset active=0><uib-tab index=0 heading=\\\"Classificação geral\\\"><div ng-include=\\\"\\'app/admin/scores/abas/geral.html\\'\\\"></div></uib-tab><uib-tab index=1 heading=\\\"Classificação por prova\\\"><div ng-include=\\\"\\'app/admin/scores/abas/byComps.html\\'\\\"></div></uib-tab></uib-tabset></div>\");\n$templateCache.put(\"app/components/bgCarousel/template.html\",\"<div ng-repeat=\\\"img in images\\\" class=image ng-class=\\\"{ \\'visible\\': active_image == $index }\\\" ng-style=\\\"{ \\'background-image\\': \\'url(\\' + img + \\')\\' }\\\"></div>\");\n$templateCache.put(\"app/admin/reps/create/template.html\",\"<div id=modal-rep-create><div class=window-header><h1 class=window-description-header>Cadastrar nova república</h1></div><div class=window-content><form novalidade class=create-form><div class=\\\"row input-row\\\"><div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 input-col\\\"><label>Nome:</label><input type=text ng-model=rep.name placeholder=Digite...></div><div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 input-col\\\"><label>Gênero:</label><select name=genre-select id=genre-select ng-model=rep.genre><option value=\\\"\\\" disabled selected>Selecione</option><option value=F>Feminino</option><option value=M>Masculino</option></select></div></div><div class=\\\"row input-row\\\"><div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 input-col\\\"><label>Email:</label><input type=text ng-model=rep.email placeholder=Digite...></div><div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 input-col\\\"><label>Usúario:</label><input type=text ng-model=rep.user placeholder=Digite...></div><div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 input-col\\\"><label>Senha:</label><input type=text ng-model=rep.password placeholder=Digite...></div></div><div class=\\\"row input-row-button\\\"><div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\"><button type=button class=\\\"btn btn-outline\\\" ng-click=methods.save()>Salvar</button></div></div></form></div><div class=window-footer><button type=button class=btn-outline ng-click=methods.closeModal()>Fechar</button></div></div>\");\n$templateCache.put(\"app/admin/reps/create/window-template.html\",\"<div id=create-bordero class=window-modal modal-in-class=window-open ng-style=\\\"{\\'z-index\\': 1000, display: \\'block\\'}\\\" ng-click=close($event)><div class=window-inner ng-transclude></div></div>\");\n$templateCache.put(\"app/admin/reps/details/template.html\",\"<div id=modal-rep-details><div class=window-header><h1 class=window-description-header>República {{rep.name}}</h1></div><div class=window-content><table class=\\\"table table-striped rep-infos-table\\\"><thead><tr><th class=column-1>Provas</th><th class=column-2>Participantes</th></tr></thead><tbody><tr ng-if=rep.competitions.length ng-repeat=\\\"comp in rep.competitions\\\"><td class=column-1>{{comp.name}}</td><td class=column-2><ul ng-repeat=\\\"part in comp.team\\\"><li>- {{part.name}} (part.username)</li></ul></td></tr><tr ng-if=!rep.competitions.length><td class=no-data-td>Nenhum dado encontrado.</td></tr></tbody></table></div><div class=window-footer><button type=button class=btn-outline ng-click=methods.closeModal()>Fechar</button></div></div>\");\n$templateCache.put(\"app/admin/reps/details/window-template.html\",\"<div id=create-bordero class=window-modal modal-in-class=window-open ng-style=\\\"{\\'z-index\\': 1000, display: \\'block\\'}\\\" ng-click=close($event)><div class=window-inner ng-transclude></div></div>\");\n$templateCache.put(\"app/admin/scores/abas/byComps.html\",\"<div class=all-comps-results><div class=row><div class=\\\"col-xs-8 col-sm-3 col-md-3 col-lg-2 select-comp\\\"><select name=comp-select id=comp-select ng-model=selectedCompetition ng-change=methods.changeSelectedCompetition(selectedCompetition)><option value=\\\"\\\" disabled selected>Selecione</option><option ng-repeat=\\\"item in allCompetitionsArray track by item.name\\\" value={{item}}>{{item.name}}</option></select></div></div><div class=row ng-if=selectedCompetition><table class=\\\"table table-striped rep-infos-table\\\"><thead><tr><th class=column-1>Posição</th><th class=column-2>Rep</th></tr></thead><tbody><tr ng-if=leaderboard.length ng-repeat=\\\"position in leaderboard track by $index\\\"><td class=column-1>#{{$index + 1}}</td><td class=column-2><ui-select ng-model=position.rep theme=bootstrap on-select=methods.validateRepsAdded($item)><ui-select-match><span ng-bind=$select.selected.name></span> <button class=ui-select-clear ng-click=\\\"methods.validateRepsRemoved($event, $select.selected, $index)\\\">&#10006;</button></ui-select-match><ui-select-choices ui-disable-choice=methods.validateReps(rep) repeat=\\\"rep in reps | filter: $select.search track by $index\\\"><span ng-bind=rep.name></span></ui-select-choices></ui-select></td></tr><tr ng-if=!leaderboard.length><td class=no-data-td>Nenhum dado encontrado.</td></tr></tbody></table><div class=\\\"row save-btn-row\\\"><button type=button class=\\\"btn btn-outline\\\" ng-click=methods.saveLeaderboad(selectedCompetition)>Salvar</button></div></div></div>\");\n$templateCache.put(\"app/admin/scores/abas/geral.html\",\"<div class=all-comps-results><div class=\\\"row filters\\\"><div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 input-col\\\"><label>Gênero:</label><select name=genre-select id=genre-select ng-model=filter.genre><option value=G selected>Geral</option><option value=F>Feminino</option></select></div><!-- <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 input-col\\\">\\n      <label>Provas:</label>\\n      <select name=\\\"genre-select\\\" id=\\\"genre-select\\\" ng-model=\\\"filter.competitions\\\">\\n        <option value=\\\"T\\\" selected>Todas</option>\\n        <option value=\\\"A\\\">Alcoolicas</option>\\n        <option value=\\\"NA\\\">Não alcoolicas</option>\\n      </select>\\n    </div> --></div><table class=\\\"table classification-table\\\"><colgroup><col class=table-times-col-posicao><col class=table-times-col-rep></colgroup><thead><tr class=table-head-line><th>Classificação</th></tr></thead><tbody><tr class=table-body-line ng-repeat=\\\"rep in reps | orderBy: \\'-points\\' | filter: methods.genreFilter track by $index\\\"><td class=rep-position>{{$index + 1}}</td><td class=rep-name-position><span>{{rep.name}}</span></td></tr></tbody></table><div class=table-scroll><table class=\\\"table points-table\\\"><thead><tr class=table-head-line><th>Pontos</th><th ng-repeat=\\\"competition in allCompetitionsArray | orderBy: \\'name\\' | filter: methods.competitionFilter\\\"><a uib-tooltip={{competition.name}} tooltip-append-to-body=true>{{competition.initials}}</a></th></tr></thead><tbody><tr class=table-body-line ng-repeat=\\\"rep in updatedReps | orderBy: \\'-points\\' | filter: methods.genreFilter track by $index\\\"><td class=rep-points><b>{{rep.points || 0}}</b></td><td class=rep-points ng-repeat=\\\"competition in rep.competitions | orderBy: \\'name\\' track by $index\\\"><span>{{competition.points ? competition.points : 0}}</span></td></tr></tbody></table></div></div>\");}]);"],"sourceRoot":"/source/"}